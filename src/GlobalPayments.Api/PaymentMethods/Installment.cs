using GlobalPayments.Api.Builders;
using GlobalPayments.Api.Entities;
using GlobalPayments.Api.Gateways.Interfaces;
using GlobalPayments.Api.Services;
using System;
using System.Collections.Generic;
using System.Text;
using Action = GlobalPayments.Api.Entities.Action;

namespace GlobalPayments.Api.PaymentMethods {
    /// <summary>
    /// Represents the Installment payment method to create the installment plan 
    /// </summary>
    public class Installment : IInstallmentEntity {
        /// <summary>
        /// Represents the account name
        /// </summary>
        public string AccountName { get; set; }
        /// <summary>
        /// Represents the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario.
        /// </summary>
        public string Channel { get; set; }
        /// <summary>
        /// The amount to transfer between Payer and Merchant. 
        /// It is always represented in the lowest denomination of the related currency. and with no decimal point.
        /// </summary>
        public decimal? Amount { get; set; }
        /// <summary>
        /// Represents the currency of the amount.
        /// </summary>
        public string Currency { get; set; }
        /// <summary>
        /// Represents the countty the merchant is domiciled in.
        /// </summary>
        public string Country { get; set; }
        /// <summary>
        /// Represents the Merchant defined field to reference the transaction.
        /// </summary>
        public string Reference { get; set; }
        /// <summary>
        /// This field indicates the installment program the merchant is participating in.
        /// </summary>
        public string Program { get; set; }
        /// <summary>
        /// Represents unique identifier that is used to identify and reference an instance of this resource. 
        /// This id is used when actioning or referencing a specific installment request. 
        /// Begins with the three letters, INS.
        /// </summary>
        public string Id { get; set; }
        /// <summary>
        /// Represents Global Payments time indicating when the object was created in ISO-8601 format.
        /// </summary>
        public DateTime TimeCreated { get; set; }
        /// <summary>
        /// The type of installment request.
        /// </summary>
        public string Type { get; set; }
        /// <summary>
        /// Indicates the status of the installment.
        /// </summary>
        public string Status { get; set; }
        /// <summary>
        /// Represents a unique identifier that is used to identify and reference an instance of this resource. 
        /// This id is used when actioning or referencing a specific merchant. 
        /// Begins with the three letters, MER.
        /// </summary>
        public string MerchantId { get; set; }
        /// <summary>
        /// Represents the merchant name.
        /// </summary>
        public string MerchantName { get; set; }
        /// <summary>
        /// Represents the account id.
        /// </summary>
        public string AccountId { get; set; }
        /// <summary>
        /// Represents unique identifier that is used to identify and reference an instance of this resource. 
        /// This id is used when actioning or referencing a specific account. 
        /// Begins with the three letters, TRA.
        /// </summary>
        public List<Terms> Terms { get; set; }
        /// <summary>
        /// Represents the Action Result returned by GP API
        /// </summary>
        public Action Action { get; set; }
        /// <summary>
        /// Represents the result code associated with the payment method used to process this transaction.
        /// </summary>
        public string Result { get; set; }
        /// <summary>
        /// Represents the result message that better explains the result code.
        /// </summary>
        public string Message { get; set; }
        /// <summary>
        /// Indicates how the payment method information was obtained by the Merchant for this transaction.
        /// </summary>
        public string EntryMode { get; set; }
        /// <summary>
        /// Represents the Card Details
        /// </summary>
        public Card Card { get; set; }
        /// <summary>
        /// Represents the Card Details
        /// </summary>
        public CreditCardData CardDetails { get; set; }
        /// <summary>
        /// Indicates Code generated by the card provider when the card is successfully authorized.
        /// </summary>
        public string AuthCode { get; set; }
        /// <summary>
        /// Creates an installment
        /// </summary>
        /// <returns>Installment</returns>
        public Installment Create() {

            return Create("default");
        }
        /// <summary>
        /// Creates an installment with configName
        /// </summary>
        /// <param name="configName"></param>
        /// <returns>Installment</returns>
        public Installment Create(string configName) {

            return InstallmentService.Create(this, configName);
        }
    } 
}
